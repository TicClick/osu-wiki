name: Post-merge outdate processing

on:
  push:
    branches:
      - master
    paths:
      - '**.md'
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  process-outdated-files:
    name: Process outdated files after merge
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || (github.event_name == 'push' && !contains(github.event.head_commit.message, 'Merge pull request'))

    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: pip
          cache-dependency-path: requirements.txt
          python-version: "3.11"

      - name: Read DO_NOT_OUTDATE rules
        id: read-rules
        if: github.event.pull_request.merged == true
        env:
          MAYBE_PULL_REQUEST_BODY: ${{ github.event.pull_request.body || '' }}
        run: |
          cat > parse_rules.py << 'EOF'
          import os
          import re
          import sys

          DO_NOT_OUTDATE_RE = re.compile("DO_NOT_OUTDATE:\s*(.+?)(?=\n|$)")

          def main():
              body = os.environ["MAYBE_PULL_REQUEST_BODY"]
              for match in DO_NOT_OUTDATE_RE.findall(body):
                  for split in match.split(","):
                      print("--exclude={}".format(split.strip()))

          if __name__ == "__main__":
              main()
          EOF

          exclude_args="$( python parse_rules.py )"
          if [ -n $exclude_args ]; then
              echo 'exclude_args<<EOF' >> $GITHUB_OUTPUT
              echo "$exclude_args" >> $GITHUB_OUTPUT
              echo 'EOF' >> $GITHUB_OUTPUT
          else
              echo "exclude_args=" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python CI dependencies
        run: pip install git+https://github.com/TicClick/osu-wiki-tools.git@exclude-outdated-paths

      - name: Run osu-wiki-tools with excludes
        env:
          TRIGGER_REFERENCE: ${{ (github.event.pull_request.number && format('pull request {#}{0}', github.event.pull_request.number)) || format('commit {0}', github.sha) }}
        run: |
          exclude_args="${{ steps.read-rules.outputs.exclude_args }}"
          osu-wiki-tools check-outdated-articles \
              --autofix \
              --base-commit "${{ github.sha }}~1" \
              --outdated-since ${{ github.sha }} \
              $exclude_args

          git config --global user.name "github-actions[bot]" && \
              git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
              git commit -a -m "Mark translations as outdated after ${{ env.TRIGGER_REFERENCE }}" && \
              git push

      - name: Create summary
        run: |
          exclude_rules="${{ steps.read-rules.outputs.exclude_args }}"
          if [ -n "$exclude_args" ]; then
            echo "**Exclude rules applied:**" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$exclude_rules" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** No exclude rules found, processed all changed files" >> $GITHUB_STEP_SUMMARY
          fi
