name: Post-merge outdate processing

on:
  push:
    branches:
      - master
    paths:
      - '**.md'

jobs:
  process-outdated-files:
    name: Process outdated files after merge
    runs-on: ubuntu-latest

    permissions:
      contents: write
    
    steps:
      - name: Read pull request data
        uses: actions/github-script@v6
        id: read-pr-data
        with:
          script: |
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: pip
          cache-dependency-path: requirements.txt
          python-version: "3.11"

      - name: Set up Python CI dependencies
        run: pip install git+https://github.com/TicClick/osu-wiki-tools.git@exclude-outdated-paths

      - name: Process outdated articles
        id: process-articles
        env:
          PULL_REQUEST_BODY: ${{ steps.read-pr-data.outputs.result && fromJson(steps.read-pr-data.outputs.result).body }}
          PULL_REQUEST_NUMBER: ${{ steps.read-pr-data.outputs.result && fromJson(steps.read-pr-data.outputs.result).number }}
        run: |
          exclude_args=()
          exclude_list=""
          
          if [ -n "$PULL_REQUEST_BODY" ]; then
            while IFS= read -r line; do
              if [[ "$line" =~ DO_NOT_OUTDATE:[[:space:]]*(.+) ]]; then
                IFS=',' read -ra items <<< "${BASH_REMATCH[1]}"
                for item in "${items[@]}"; do
                  item_clean=$( echo "$item" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' )
                  exclude_args+=( "--exclude=${item_clean}" )
                  exclude_list="${exclude_list}--exclude=${item_clean}"$'\n'
                done
              fi
            done <<< "$PULL_REQUEST_BODY"
          fi

          if [ -n "$exclude_list" ]; then
              echo 'exclude_list<<EOF' >> $GITHUB_OUTPUT
              echo "$exclude_list" >> $GITHUB_OUTPUT
              echo 'EOF' >> $GITHUB_OUTPUT
          else
              echo "exclude_list=" >> $GITHUB_OUTPUT
          fi

          osu-wiki-tools check-outdated-articles \
              --autofix \
              --base-commit "${{ github.sha }}~1" \
              --outdated-since ${{ github.sha }} \
              "${exclude_args[@]}"

          if [ -n "$PULL_REQUEST_NUMBER" ]; then
            action_trigger="pull request #${PULL_REQUEST_NUMBER}"
          else
            action_trigger="commit ${{ github.sha }}"
          fi

          git config --global user.name "github-actions[bot]" && \
              git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
              git commit -a -m "Mark translations as outdated after $action_trigger" && \
              git push

      - name: Create summary
        run: |
          exclude_rules="${{ steps.process-articles.outputs.exclude_list }}"
          if [ -n "$exclude_rules" ]; then
            echo "**Exclude rules applied:**" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$exclude_rules" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** No exclude rules found, processed all changed files" >> $GITHUB_STEP_SUMMARY
          fi
